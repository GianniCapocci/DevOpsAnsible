---
- hosts: appservers
  # become: yes
  tasks:

  - name: Check if Docker is installed
    shell: docker --version && docker compose version
    register: docker_version_result
    ignore_errors: true
    become: yes

  - name: Set Docker installed fact
    set_fact:
      docker_installed: "{{ docker_version_result.rc == 0 }}"

  - name: Include docker playbook if Docker is not installed
    import_tasks: docker.yaml
    become: yes
    when: not docker_installed

  - name: "Clone the Spring repository"
    git:
      repo: "https://github.com/GianniCapocci/DevOps.git"
      dest: "{{ appdir }}"
      version: "{{ branch }}"
      force: yes

  - name: "Populate application.properties"
    lineinfile:
      dest: "{{ appdir }}/src/main/resources/application.properties"
      state: present
      regexp: "^{{item.key}}="
      line: "{{item.key}}={{item.value}}"
    with_items:
      - "{{app.env | dict2items}}"

  - name: Tear down existing services
    community.docker.docker_compose:
      project_src: "{{ appdir }}"
      state: absent
    become: yes

  - name: Create and start services
    docker_compose:
      project_src: "{{ appdir }}"
      build: true
      state: present
    register: output
    notify: Restart Docker Compose
    become: yes

  - debug:
      var: output

  handlers:
    - name: Restart Docker Compose
      community.docker.docker_compose:
        project_src: "{{ appdir }}"
        restarted: true
      become: yes